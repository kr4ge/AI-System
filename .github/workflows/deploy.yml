name: Build and Deploy AI System (ARI)

on:
  push:
    branches:
      - main

env:
  DOCKERHUB_REPO: kr4ge/ai-system

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 🧾 Checkout code
      uses: actions/checkout@v3

    - name: 🛠 Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: 🔐 Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: 🐳 Build & Push Asterisk image
      uses: docker/build-push-action@v3
      with:
        context: ./asterisk
        file: ./asterisk/Dockerfile
        push: true
        tags: ${{ env.DOCKERHUB_REPO }}-asterisk:latest

    - name: 🐳 Build & Push Node App image
      uses: docker/build-push-action@v3
      with:
        context: ./node-app
        file: ./node-app/Dockerfile
        push: true
        tags: ${{ env.DOCKERHUB_REPO }}-node:latest

    - name: 📦 Copy docker-compose.yml to EC2
      uses: appleboy/scp-action@v0.1.5
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        source: "docker-compose.yml"
        target: "~/ai-system/"

    - name: 🔐 Create .env on EC2
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          mkdir -p ~/ai-system
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" > ~/ai-system/.env
          echo "DEEPGRAM_API_KEY=${{ secrets.DEEPGRAM_API_KEY }}" >> ~/ai-system/.env

    - name: 🚀 Deploy to EC2 with Docker Compose
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd ~/ai-system
          docker pull ${{ env.DOCKERHUB_REPO }}-asterisk:latest
          docker pull ${{ env.DOCKERHUB_REPO }}-node:latest
          docker-compose down || true
          docker-compose up -d --remove-orphans
